package br.com.jhonerodrigues.infra.configs;

import org.springframework.amqp.core.AmqpAdmin;
import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.DirectExchange;
import org.springframework.amqp.core.Queue;
import org.springframework.stereotype.Component;

import jakarta.annotation.PostConstruct;

@Component
public class RabbitMQConection {
	private static final String NOME_EXCHANGE = "amq.direct";
	public static final String SCHEDULING_QUEUE = "SCHEDULING";

	  private AmqpAdmin amqpAdmin;

	  public RabbitMQConection(AmqpAdmin amqpAdmin){
	    this.amqpAdmin = amqpAdmin;
	  }

	  private Queue queue(String queueName){
	    return new Queue(queueName, true, false, false);
	  }

	  private DirectExchange directExchange() {
	    return new DirectExchange(NOME_EXCHANGE);
	  }

	  private Binding relacionamento(Queue queue, DirectExchange exchange){
	    return new Binding(queue.getName(), Binding.DestinationType.QUEUE, exchange.getName(), exchange.getName(), null);
	  }

	  //está função é executada assim que nossa classe é instanciada pelo Spring, devido a anotação @Component
	  @PostConstruct
	  private void add(){
	    Queue filaEstoque = this.queue(SCHEDULING_QUEUE);

	    DirectExchange troca = this.directExchange();

	    Binding ligacaoEstoque = this.relacionamento(filaEstoque, troca);

	    //Criando as filas no RabbitMQ
	    this.amqpAdmin.declareQueue(filaEstoque);

	    this.amqpAdmin.declareExchange(troca);

	    this.amqpAdmin.declareBinding(ligacaoEstoque);
	    this.amqpAdmin.declareBinding(ligacaoPreco);
	  }
}
